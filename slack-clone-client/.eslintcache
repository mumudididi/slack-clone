[{"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/index.js":"1","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/reportWebVitals.js":"2","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/index.js":"3","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Home.js":"4","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Register.js":"5","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Login.js":"6","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/stores/LoginContext.js":"7"},{"size":860,"mtime":1608835748792,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1608689995809,"results":"10","hashOfConfig":"9"},{"size":611,"mtime":1608937334272,"results":"11","hashOfConfig":"9"},{"size":491,"mtime":1608778631855,"results":"12","hashOfConfig":"9"},{"size":3112,"mtime":1608844643678,"results":"13","hashOfConfig":"9"},{"size":1006,"mtime":1608938545152,"results":"14","hashOfConfig":"9"},{"size":563,"mtime":1608938918912,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1oq10bm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/index.js",[],["32","33"],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/reportWebVitals.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/index.js",["34","35","36"],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Home.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Register.js",["37","38"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Message,\n  Button,\n  Container,\n  Header,\n  Input,\n  FormInput,\n} from \"semantic-ui-react\";\n\nconst Register = () => {\n  const [userInput, setUserInput] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [formStatus, setFormStatus] = useState({\n    usernameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n  });\n\n  const history = useHistory();\n\n  // structure of data : { register: {ok: false, errors: [(),()...]}}\n  const [register, { data, loading, error }] = useMutation(registerMutation);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setUserInput((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const { username, password, email } = userInput;\n    const response = await register({\n      variables: { username, password, email },\n      ignoreResults: false,\n    });\n    const { ok, errors } = response.data.register;\n    if (ok) {\n      history.push(\"/\");\n    } else {\n      const err = {};\n      console.log(errors);\n      errors.forEach(({ path, message }) => {\n        err[`${path}Error`] = message;\n      });\n      console.log(err);\n      setFormStatus(err);\n    }\n    setUserInput({\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n  // const errList = () => {\n  //   const err = [];\n  //   console.log(\"here\");\n  //   for (const msg in formStatus) {\n  //     if (msg) {\n  //       console.log(\"on submit\");\n  //       console.log(msg);\n  //       err.push(msg);\n  //     }\n  //   }\n  //   return err;\n  // };\n\n  return (\n    <Container text>\n      <Header as=\"h2\">Register</Header>\n      {error ? <h3>an unkown error has occur during registration</h3> : null}\n      <Input\n        error={!!formStatus.usernameError}\n        name=\"username\"\n        onChange={onChange}\n        value={userInput.username}\n        placeholder=\"Username\"\n        fluid\n      />\n      <Input\n        error={!!formStatus.emailError}\n        name=\"email\"\n        onChange={onChange}\n        value={userInput.email}\n        placeholder=\"Email\"\n        fluid\n      />\n      <Input\n        error={!!formStatus.passwordError}\n        name=\"password\"\n        onChange={onChange}\n        value={userInput.password}\n        placeholder=\"Password\"\n        fluid\n      />\n      <Button onClick={onSubmit}>{loading ? \"Loading\" : \"Register!\"}</Button>\n      {formStatus.usernameError ||\n      formStatus.passwordError ||\n      formStatus.emailError ? (\n        <Message\n          error\n          header=\"There is something wrong with your registration\"\n          list={Object.values(formStatus)}\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nconst registerMutation = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    register(username: $username, password: $password, email: $email) {\n      ok\n      errors {\n        path\n        message\n      }\n    }\n  }\n`;\n\nexport default Register;\n","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Login.js",["39","40"],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/stores/LoginContext.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":2,"column":42,"nodeType":"48","messageId":"49","endLine":2,"endColumn":46},{"ruleId":"51","severity":1,"message":"52","line":8,"column":1,"nodeType":"53","endLine":18,"endColumn":3},{"ruleId":"46","severity":1,"message":"54","line":10,"column":3,"nodeType":"48","messageId":"49","endLine":10,"endColumn":12},{"ruleId":"46","severity":1,"message":"55","line":28,"column":22,"nodeType":"48","messageId":"49","endLine":28,"endColumn":26},{"ruleId":"46","severity":1,"message":"56","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"57","line":5,"column":10,"nodeType":"48","messageId":"49","endLine":5,"endColumn":17},{"ruleId":"46","severity":1,"message":"58","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":13},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'FormInput' is defined but never used.","'data' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Message' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]