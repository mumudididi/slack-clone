[{"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/index.js":"1","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/reportWebVitals.js":"2","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/index.js":"3","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Home.js":"4","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Register.js":"5","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Login.js":"6","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/stores/LoginContext.js":"7","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/CreateTeam.js":"8"},{"size":2455,"mtime":1609103824160,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608689995809,"results":"11","hashOfConfig":"10"},{"size":695,"mtime":1609021318946,"results":"12","hashOfConfig":"10"},{"size":491,"mtime":1608778631855,"results":"13","hashOfConfig":"10"},{"size":3328,"mtime":1609041694332,"results":"14","hashOfConfig":"10"},{"size":3294,"mtime":1609041672182,"results":"15","hashOfConfig":"10"},{"size":696,"mtime":1609010975726,"results":"16","hashOfConfig":"10"},{"size":2360,"mtime":1609107998917,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1m2oczd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/index.js",[],["38","39"],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/reportWebVitals.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/index.js",["40","41"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Register from \"./Register\";\n// import LoginContext, { LoginStore } from \"./stores/LoginContext\";\nimport Login from \"./Login\";\nimport CreateTeam from \"./CreateTeam\";\n\nexport default () => (\n  // <LoginContext.Provider value={new LoginStore()}>\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/register\" exact component={Register} />\n      <Route path=\"/login\" exact component={Login} />\n      <Route path=\"/create-team\" exact component={CreateTeam} />\n    </Switch>\n  </Router>\n  // </LoginContext.Provider>\n);\n","/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Home.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Register.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/Login.js",[],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/stores/LoginContext.js",[],["42","43"],"/home/mumu/Desktop/Projects/GraphQL/benAward/slack-clone/slack-clone-client/src/routes/CreateTeam.js",["44"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport {\n  Form,\n  Message,\n  Button,\n  Container,\n  Header,\n  Input,\n} from \"semantic-ui-react\";\n\nconst CreateTeam = () => {\n  const [team, setTeam] = useState({\n    name: \"\",\n  });\n  const [createTeamErrors, setErrors] = useState({\n    nameError: \"\",\n  });\n\n  const history = useHistory();\n\n  // structure of data : { register: {ok: false, errors: [(),()...]}}\n  const [createTeam, { data, loading, error }] = useMutation(\n    createTeamMutation\n  );\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setTeam((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const { name } = team;\n    let response = null;\n    try {\n      response = await createTeam({\n        variables: { name },\n        ignoreResults: false,\n      });\n    } catch (error) {\n      console.log(\"in erorr redirection\");\n      console.log(error);\n      history.push(\"/login\");\n      return;\n    }\n    const { ok, errors } = response.data.createTeam;\n    if (ok) {\n      history.push(\"/\");\n    } else {\n      const err = {};\n      errors.forEach(({ path, message }) => {\n        err[`${path}Error`] = message;\n      });\n      setErrors(err);\n    }\n  };\n\n  return (\n    <Container text>\n      <Header as=\"h2\">Create A Team</Header>\n      {error ? <h3>an unkown error has occur during registration</h3> : null}\n      <Form>\n        <Form.Field\n          control={Input}\n          name=\"name\"\n          value={team.name}\n          placeholder=\"name\"\n          error={!!createTeamErrors.nameError}\n          onChange={onChange}\n          fluid\n        />\n        <Form.Field>\n          <Button onClick={onSubmit}>\n            {loading ? \"Loading\" : \"Register!\"}\n          </Button>\n        </Form.Field>\n      </Form>\n\n      {createTeamErrors.nameError ? (\n        <Message\n          error\n          header=\"There is something wrong with your registration\"\n          list={Object.values(createTeamErrors)}\n        />\n      ) : null}\n    </Container>\n  );\n};\n\nconst createTeamMutation = gql`\n  mutation($name: String!) {\n    createTeam(name: $name) {\n      ok\n      errors {\n        path\n        message\n      }\n    }\n  }\n`;\n\nexport default CreateTeam;\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":42,"nodeType":"51","messageId":"52","endLine":2,"endColumn":46},{"ruleId":"53","severity":1,"message":"54","line":9,"column":1,"nodeType":"55","endLine":20,"endColumn":3},{"ruleId":"45","replacedBy":"56"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"49","severity":1,"message":"58","line":24,"column":24,"nodeType":"51","messageId":"52","endLine":24,"endColumn":28},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["59"],["60"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]